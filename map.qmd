---
title: "Last 5 Days of L.Polyedra Detections in the SoCal Bight"
execute: 
  echo: false
jupyter: python3
---
Below is a plot showing the cells per liter of L. Polyedra from the last 8 weeks of in-situ samples taken in the Southern California Bight. The samples are taken by the Southern California Coastal Ocean Observing System (SCCOOS) and the data is available [here](https://erddap.sccoos.org/erddap/tabledap/index.html). The samples are taken at 4 locations: Scripps Pier, Newport Beach Pier, Santa Monica Pier and Stearns Wharf. These samples are taken at most once per week and a delay between sampling and data availability is expected.

![](data/lpoly_recent.png)


Below is a map displaying the last 5 days of detected bioluminescent algal blooms off of the coast of Southern California as well as the HABMAP points where in-situ samples are taken. These blooms are detected using data from the JAXA GCOM/SGLI satelite and the methodology described [here](methods.qmd).

In the top right of the map there is a widget to control the displayed layers. Each layer represents a single day of detections

This map is updated daily.


```{python}
from pathlib import Path
import json
from ipyleaflet import Map, GeoJSON, LayersControl, WidgetControl
from ipywidgets import Layout, HTML
from IPython.display import display

#path = Path('E:\personal\gh_pages_sites\ghp_bab')
path = Path('.')
poly_files = list(path.glob('**/targetClip_*.geojson'))
poly_files.sort()

poly_list = []

for file in poly_files:
    with open(file) as f:
        poly_data = json.load(f)
        poly_list.append(poly_data)

point_files = list(path.glob('**/latest_samples.geojson'))

with open(point_files[0]) as f:
    point_data = json.load(f)

layout = Layout(height='600px' ,width='100%')

m = Map(center=(34, -119), zoom=8, layout=layout, scroll_wheel_zoom=True)

fill_colors = ['#009999', '#00b2b2', '#00cccc', '#00e5e5', '#00ffff',]

site_colors = {"HABs-NewportBeachPier": "#e41a1c",
               "HABs-SantaMonicaPier": "#377eb8",
               "HABs-ScrippsPier": "#4daf4a",
               "HABs-StearnsWharf": "#984ea3"}

for i, poly in enumerate(poly_list):

    fill = fill_colors[i]

    name = poly['name']

    geo_json = GeoJSON(
        name=name,
        data=poly,
        style={
            'fillColor' : fill, 'color': 'gray', 'opacity': .7, 'dashArray': '0', 'fillOpacity': 0.5, 'weight': 1
        },
        hover_style={
            'color': 'white', 'dashArray': '0', 'fillOpacity': 0.4
        },)
    
    m.add_layer(geo_json)

def point_style(feature):

    color = site_colors[feature['properties']['datasetID']]

    return {
        'color': color, 'radius': 5,'opacity': 0, 'fillOpacity': 0.8,'weight': 0.5
    }

geo_json_smpl = GeoJSON(
    name='In Situ Sample Locations',
    data=point_data,
    point_style={
        'radius': 5,'opacity': 0, 'fillOpacity': 0.8,'weight': 0.5
    },
    style_callback=point_style)

m.add_layer(geo_json_smpl)

control = LayersControl(position='topright')
m.add_control(control)

display(m)
```